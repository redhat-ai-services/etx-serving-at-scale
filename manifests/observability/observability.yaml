# Main namespace for observability components including Grafana, Tempo, MinIO, and OpenTelemetry collectors
apiVersion: v1
kind: Namespace
metadata:
  name: observability-hub
---
# Namespace for the Cluster Observability Operator which manages cluster-wide observability features
apiVersion: v1
kind: Namespace
metadata:
  annotations:
    openshift.io/display-name: Cluster Observability Operator
  labels:
    app.kubernetes.io/instance: cluster-observability-operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: cluster-observability-operator
    app.kubernetes.io/version: 1.2.0
    helm.sh/chart: cluster-observability-operator-0.1.0
    openshift.io/cluster-monitoring: "true"
  name: openshift-cluster-observability-operator
---
# Namespace for the Grafana Operator which manages Grafana instances and dashboards for visualization
apiVersion: v1
kind: Namespace
metadata:
  annotations:
    openshift.io/display-name: Grafana Operator
  labels:
    app.kubernetes.io/instance: grafana-operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: grafana-operator
    app.kubernetes.io/version: 5.x
    helm.sh/chart: grafana-operator-1.0.0
    openshift.io/cluster-monitoring: "true"
  name: openshift-grafana-operator
---
# Namespace for the OpenTelemetry Operator which manages telemetry collection for metrics, traces, and logs
apiVersion: v1
kind: Namespace
metadata:
  annotations:
    openshift.io/display-name: Red Hat build of OpenTelemetry
  labels:
    app.kubernetes.io/instance: otel-operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: otel-operator
    app.kubernetes.io/version: 0.93.0-3
    helm.sh/chart: otel-operator-1.0.0
    openshift.io/cluster-monitoring: "true"
  name: openshift-opentelemetry-operator
---
# Namespace for the Tempo Operator which manages distributed tracing infrastructure using Grafana Tempo
apiVersion: v1
kind: Namespace
metadata:
  annotations:
    openshift.io/display-name: Tempo Operator
  labels:
    app.kubernetes.io/instance: tempo-operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: tempo-operator
    app.kubernetes.io/version: stable
    helm.sh/chart: tempo-operator-1.0.0
    openshift.io/cluster-monitoring: "true"
  name: openshift-tempo-operator
---
# Namespace for user workload monitoring configuration and custom metrics collection
apiVersion: v1
kind: Namespace
metadata:
  name: openshift-user-workload-monitoring
---
# =============================================================================
# OPERATOR GROUPS AND SUBSCRIPTIONS
# These must be installed first so the CRDs are available for custom resources
# =============================================================================
apiVersion: operators.coreos.com/v1
kind: OperatorGroup
metadata:
  labels:
    app.kubernetes.io/instance: cluster-observability-operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: cluster-observability-operator
    app.kubernetes.io/version: 1.2.0
    helm.sh/chart: cluster-observability-operator-0.1.0
  name: openshift-cluster-observability-operator
  namespace: openshift-cluster-observability-operator
spec:
  upgradeStrategy: Default
---
apiVersion: operators.coreos.com/v1
kind: OperatorGroup
metadata:
  labels:
    app.kubernetes.io/instance: grafana-operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: grafana-operator
    app.kubernetes.io/version: 5.x
    helm.sh/chart: grafana-operator-1.0.0
  name: openshift-grafana-operator
  namespace: openshift-grafana-operator
spec:
  upgradeStrategy: Default
---
apiVersion: operators.coreos.com/v1
kind: OperatorGroup
metadata:
  labels:
    app.kubernetes.io/instance: otel-operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: otel-operator
    app.kubernetes.io/version: 0.93.0-3
    helm.sh/chart: otel-operator-1.0.0
  name: openshift-opentelemetry-operator
  namespace: openshift-opentelemetry-operator
spec:
  upgradeStrategy: Default
---
apiVersion: operators.coreos.com/v1
kind: OperatorGroup
metadata:
  labels:
    app.kubernetes.io/instance: tempo-operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: tempo-operator
    app.kubernetes.io/version: stable
    helm.sh/chart: tempo-operator-1.0.0
  name: openshift-tempo-operator
  namespace: openshift-tempo-operator
spec:
  upgradeStrategy: Default
---
apiVersion: operators.coreos.com/v1alpha1
kind: Subscription
metadata:
  labels:
    app.kubernetes.io/instance: cluster-observability-operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: cluster-observability-operator
    app.kubernetes.io/version: 1.2.0
    helm.sh/chart: cluster-observability-operator-0.1.0
    operators.coreos.com/cluster-observability-operator.openshift-cluster-observability: ""
  name: cluster-observability-operator
  namespace: openshift-cluster-observability-operator
spec:
  channel: stable
  installPlanApproval: Automatic
  name: cluster-observability-operator
  source: redhat-operators
  sourceNamespace: openshift-marketplace
  startingCSV: cluster-observability-operator.v1.2.0
---
apiVersion: operators.coreos.com/v1alpha1
kind: Subscription
metadata:
  labels:
    app.kubernetes.io/instance: grafana-operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: grafana-operator
    app.kubernetes.io/version: 5.x
    helm.sh/chart: grafana-operator-1.0.0
  name: grafana
  namespace: openshift-grafana-operator
spec:
  channel: v5
  installPlanApproval: Automatic
  name: grafana-operator
  source: community-operators
  sourceNamespace: openshift-marketplace
---
apiVersion: operators.coreos.com/v1alpha1
kind: Subscription
metadata:
  labels:
    app.kubernetes.io/instance: otel-operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: otel-operator
    app.kubernetes.io/version: 0.93.0-3
    helm.sh/chart: otel-operator-1.0.0
  name: opentelemetry-product
  namespace: openshift-opentelemetry-operator
spec:
  channel: stable
  installPlanApproval: Automatic
  name: opentelemetry-product
  source: redhat-operators
  sourceNamespace: openshift-marketplace
---
apiVersion: operators.coreos.com/v1alpha1
kind: Subscription
metadata:
  labels:
    app.kubernetes.io/instance: tempo-operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: tempo-operator
    app.kubernetes.io/version: stable
    helm.sh/chart: tempo-operator-1.0.0
  name: tempo-product
  namespace: openshift-tempo-operator
spec:
  channel: stable
  installPlanApproval: Automatic
  name: tempo-product
  source: redhat-operators
  sourceNamespace: openshift-marketplace
---
# =============================================================================
# RBAC CONFIGURATION
# Service accounts, cluster roles, and role bindings
# =============================================================================
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/component: otel-collector
    app.kubernetes.io/instance: otel-collector
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: otel-collector
    app.kubernetes.io/part-of: observability
    app.kubernetes.io/version: 0.115.0
    helm.sh/chart: otel-collector-0.1.0
  name: otel-collector
  namespace: observability-hub
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: otel-collector
    app.kubernetes.io/instance: otel-collector
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: otel-collector
    app.kubernetes.io/part-of: observability
    app.kubernetes.io/version: 0.115.0
    helm.sh/chart: otel-collector-0.1.0
  name: observability-hub-otel-collector-tempostack-traces-write
rules:
- apiGroups:
  - tempo.grafana.com
  resourceNames:
  - traces
  resources:
  - dev
  verbs:
  - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: tempo
    app.kubernetes.io/instance: tempo
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: tempo-stack
    app.kubernetes.io/part-of: observability
    app.kubernetes.io/version: latest
    helm.sh/chart: tempo-stack-1.0.0
  name: observability-hub-tempo-tempo-stack-traces-reader
rules:
- apiGroups:
  - tempo.grafana.com
  resourceNames:
  - traces
  resources:
  - dev
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: tempostack-traces-reader
rules:
- apiGroups:
  - ""
  resourceNames: []
  resources:
  - ""
  verbs:
  - ""
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: tempostack-traces-write
rules:
- apiGroups:
  - ""
  resourceNames: []
  resources:
  - ""
  verbs:
  - ""
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app.kubernetes.io/instance: grafana
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: grafana
    app.kubernetes.io/version: latest
    helm.sh/chart: grafana-0.1.0
  name: edit-grafana
  namespace: observability-hub
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: edit
subjects:
- kind: ServiceAccount
  name: grafana-sa
  namespace: observability-hub
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/instance: grafana
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: grafana
    app.kubernetes.io/version: latest
    helm.sh/chart: grafana-0.1.0
  name: cluster-monitoring-view-grafana
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-monitoring-view
subjects:
- kind: ServiceAccount
  name: grafana-sa
  namespace: observability-hub
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/component: otel-collector
    app.kubernetes.io/instance: otel-collector
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: otel-collector
    app.kubernetes.io/part-of: observability
    app.kubernetes.io/version: 0.115.0
    helm.sh/chart: otel-collector-0.1.0
  name: observability-hub-otel-collector-tempostack-traces
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: observability-hub-otel-collector-tempostack-traces-write
subjects:
- kind: ServiceAccount
  name: otel-collector
  namespace: observability-hub
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/component: tempo
    app.kubernetes.io/instance: tempo
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: tempo-stack
    app.kubernetes.io/part-of: observability
    app.kubernetes.io/version: latest
    helm.sh/chart: tempo-stack-1.0.0
  name: observability-hub-tempo-tempo-stack-traces-reader
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: observability-hub-tempo-tempo-stack-traces-reader
subjects:
- apiGroup: rbac.authorization.k8s.io
  kind: Group
  name: system:authenticated
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/instance: grafana
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: grafana
    app.kubernetes.io/version: latest
    helm.sh/chart: grafana-0.1.0
  name: openshift-cluster-monitoring-view-grafana
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: openshift-cluster-monitoring-view
subjects:
- kind: ServiceAccount
  name: grafana-sa
  namespace: observability-hub
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: otel-collector-tempo-traces-read
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: tempostack-traces-reader
subjects:
- kind: ServiceAccount
  name: otel-collector
  namespace: llama-serve
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: otel-collector-tempo-traces-write
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: tempostack-traces-write
subjects:
- kind: ServiceAccount
  name: otel-collector
  namespace: llama-serve
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/instance: grafana
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: grafana
    app.kubernetes.io/version: latest
    helm.sh/chart: grafana-0.1.0
  name: tempostack-traces-reader-grafana
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: tempostack-traces-reader
subjects:
- kind: ServiceAccount
  name: grafana-sa
  namespace: observability-hub
---
apiVersion: v1
data:
  config.yaml: |
    enableUserWorkload: true
kind: ConfigMap
metadata:
  labels:
    app.kubernetes.io/instance: uwm
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: uwm
    app.kubernetes.io/version: 1.0.0
    helm.sh/chart: uwm-0.1.0
  name: cluster-monitoring-config
  namespace: openshift-monitoring
---
# =============================================================================
# SECRETS AND CONFIGMAPS
# Configuration and credential storage
# =============================================================================
apiVersion: v1
kind: Secret
metadata:
  annotations:
    kubernetes.io/service-account.name: grafana-sa
  labels:
    app.kubernetes.io/instance: grafana
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: grafana
    app.kubernetes.io/version: latest
    helm.sh/chart: grafana-0.1.0
  name: grafana-sa-token
  namespace: observability-hub
type: kubernetes.io/service-account-token
---
apiVersion: v1
kind: Secret
metadata:
  labels:
    app.kubernetes.io/component: storage
    app.kubernetes.io/instance: tempo
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: minio-tempo
    app.kubernetes.io/part-of: observability
    app.kubernetes.io/version: latest
    helm.sh/chart: tempo-stack-1.0.0
  name: minio-tempo
  namespace: observability-hub
stringData:
  access_key_id: admin
  access_key_secret: minio123
  bucket: tempo
  endpoint: http://minio-tempo-svc.observability-hub.svc.cluster.local:9000
type: Opaque
---
apiVersion: v1
kind: Secret
metadata:
  labels:
    app.kubernetes.io/component: storage
    app.kubernetes.io/instance: tempo
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: minio-tempo
    app.kubernetes.io/part-of: observability
    app.kubernetes.io/version: latest
    helm.sh/chart: tempo-stack-1.0.0
  name: minio-user-creds
  namespace: observability-hub
stringData:
  MINIO_ROOT_PASSWORD: minio123
  MINIO_ROOT_USER: admin
type: Opaque
---
# =============================================================================
# SERVICES AND STORAGE
# Network services and persistent storage
# =============================================================================
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: storage
    app.kubernetes.io/instance: tempo
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: minio-tempo
    app.kubernetes.io/part-of: observability
    app.kubernetes.io/version: latest
    helm.sh/chart: tempo-stack-1.0.0
  name: minio-tempo-svc
  namespace: observability-hub
spec:
  internalTrafficPolicy: Cluster
  ports:
  - name: api
    port: 9000
    protocol: TCP
    targetPort: 9000
  - name: console
    port: 9001
    protocol: TCP
    targetPort: 9001
  selector:
    app.kubernetes.io/instance: tempo
    app.kubernetes.io/name: minio-tempo
  type: ClusterIP
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  finalizers:
  - kubernetes.io/pvc-protection
  labels:
    app.kubernetes.io/component: storage
    app.kubernetes.io/instance: tempo
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: minio-tempo
    app.kubernetes.io/part-of: observability
    app.kubernetes.io/version: latest
    helm.sh/chart: tempo-stack-1.0.0
  name: minio-tempo
  namespace: observability-hub
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 12Gi
  volumeMode: Filesystem
---
# =============================================================================
# DEPLOYMENTS
# Application deployments
# =============================================================================
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: storage
    app.kubernetes.io/instance: tempo
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: minio-tempo
    app.kubernetes.io/part-of: observability
    app.kubernetes.io/version: latest
    helm.sh/chart: tempo-stack-1.0.0
  name: minio-tempo
  namespace: observability-hub
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: tempo
      app.kubernetes.io/name: minio-tempo
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: tempo
        app.kubernetes.io/name: minio-tempo
    spec:
      containers:
      - command:
        - /bin/sh
        - -c
        - |
          mkdir -p /storage/tempo && \
          /usr/bin/docker-entrypoint.sh minio server /storage --console-address ":9001"
        env:
        - name: HOME
          value: /tmp
        - name: MINIO_ROOT_USER
          valueFrom:
            secretKeyRef:
              key: MINIO_ROOT_USER
              name: minio-user-creds
        - name: MINIO_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              key: MINIO_ROOT_PASSWORD
              name: minio-user-creds
        image: quay.io/minio/minio
        imagePullPolicy: Always
        name: minio-tempo
        ports:
        - containerPort: 9000
          name: api
          protocol: TCP
        - containerPort: 9001
          name: console
          protocol: TCP
        resources: {}
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: false
          runAsNonRoot: true
        volumeMounts:
        - mountPath: /storage
          name: storage
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      securityContext:
        runAsNonRoot: true
      volumes:
      - name: storage
        persistentVolumeClaim:
          claimName: minio-tempo
---
# =============================================================================
# CUSTOM RESOURCES
# Grafana, OpenTelemetry, Tempo, and other operator-managed resources
# =============================================================================
apiVersion: grafana.integreatly.org/v1beta1
kind: Grafana
metadata:
  labels:
    app.kubernetes.io/instance: grafana
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: grafana
    app.kubernetes.io/version: latest
    dashboards: grafana
    helm.sh/chart: grafana-0.1.0
  name: grafana
  namespace: observability-hub
spec:
  config:
    log:
      level: warn
      mode: console
    security:
      admin_password: rhel
      admin_user: rhel
---
apiVersion: grafana.integreatly.org/v1beta1
kind: GrafanaDatasource
metadata:
  labels:
    app.kubernetes.io/instance: grafana
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: grafana
    app.kubernetes.io/version: latest
    helm.sh/chart: grafana-0.1.0
  name: prometheus
  namespace: observability-hub
spec:
  datasource:
    access: proxy
    editable: true
    isDefault: true
    jsonData:
      httpHeaderName1: Authorization
      timeInterval: 5s
      tlsSkipVerify: true
    name: prometheus
    secureJsonData:
      httpHeaderValue1: Bearer ${token}
    type: prometheus
    url: https://thanos-querier.openshift-monitoring.svc.cluster.local:9091
  instanceSelector:
    matchLabels:
      dashboards: grafana
  valuesFrom:
  - targetPath: secureJsonData.httpHeaderValue1
    valueFrom:
      secretKeyRef:
        key: token
        name: grafana-sa-token
---
apiVersion: grafana.integreatly.org/v1beta1
kind: GrafanaDatasource
metadata:
  labels:
    app.kubernetes.io/instance: grafana
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: grafana
    app.kubernetes.io/version: latest
    helm.sh/chart: grafana-0.1.0
  name: tempo
  namespace: observability-hub
spec:
  datasource:
    access: proxy
    editable: true
    isDefault: false
    jsonData:
      httpHeaderName1: Authorization
      timeInterval: 5s
      tlsSkipVerify: true
    name: tempo
    secureJsonData:
      httpHeaderValue1: Bearer ${token}
    type: tempo
    url: https://tempo-tempostack-gateway.observability-hub.svc.cluster.local:8081/api/traces/v1/dev/tempo
  instanceSelector:
    matchLabels:
      dashboards: grafana
  valuesFrom:
  - targetPath: secureJsonData.httpHeaderValue1
    valueFrom:
      secretKeyRef:
        key: token
        name: grafana-sa-token
---
apiVersion: monitoring.coreos.com/v1
kind: PodMonitor
metadata:
  labels:
    app.kubernetes.io/instance: uwm
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: uwm
    app.kubernetes.io/version: 1.0.0
    helm.sh/chart: uwm-0.1.0
  name: vllm-llama-serve-monitor
  namespace: vllm #This is important, the observability operator needs to be in the same namespace as the vllm namespace
spec:
  podMetricsEndpoints:
  - interval: 30s
    path: /metrics
  selector:
    matchExpressions:
    - key: app
      operator: In
      values:  # add the model names here
      - safety
      - llama32-3b
      - granite-8b
      - llama31-70b
---
apiVersion: monitoring.coreos.com/v1
kind: PodMonitor
metadata:
  labels:
    app.kubernetes.io/instance: uwm
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: uwm
    app.kubernetes.io/version: 1.0.0
    helm.sh/chart: uwm-0.1.0
    release: prometheus
  name: vllm-metrics
  namespace: vllm #This is important, the observability operator needs to be in the same namespace as the vllm namespace
spec:
  podMetricsEndpoints:
  - interval: 15s
    path: /metrics
    port: h2c
  selector:
    matchLabels:
      app: isvc.llama3-2-3b-predictor
---
apiVersion: observability.openshift.io/v1alpha1
kind: UIPlugin
metadata:
  labels:
    app.kubernetes.io/component: ui-plugin
    app.kubernetes.io/instance: distributed-tracing-ui-plugin
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: distributed-tracing-ui-plugin
    app.kubernetes.io/part-of: observability
    app.kubernetes.io/version: 1.0.0
    helm.sh/chart: distributed-tracing-ui-plugin-0.1.0
  name: distributed-tracing
spec:
  type: DistributedTracing
---
apiVersion: opentelemetry.io/v1beta1
kind: OpenTelemetryCollector
metadata:
  labels:
    app.kubernetes.io/component: otel-sidecar
    app.kubernetes.io/instance: otel-collector
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: llamastack-otelsidecar-example
    app.kubernetes.io/part-of: observability
    app.kubernetes.io/version: 0.115.0
    helm.sh/chart: otel-collector-0.1.0
  name: llamastack-otelsidecar-example
  namespace: observability-hub
spec:
  config:
    exporters:
      debug: {}
      otlphttp:
        endpoint: http://otel-collector-collector.observability-hub.svc.cluster.local:4318
        tls:
          insecure: true
    processors: {}
    receivers:
      otlp:
        protocols:
          grpc: {}
          http: {}
    service:
      pipelines:
        traces:
          exporters:
          - debug
          - otlphttp
          receivers:
          - otlp
      telemetry:
        metrics:
          address: 0.0.0.0:8888
  daemonSetUpdateStrategy: {}
  deploymentUpdateStrategy: {}
  ingress:
    route: {}
  ipFamilyPolicy: SingleStack
  managementState: managed
  mode: sidecar
  observability:
    metrics: {}
  podDnsConfig: {}
  replicas: 1
  targetAllocator:
    allocationStrategy: consistent-hashing
    filterStrategy: relabel-config
    observability:
      metrics: {}
    prometheusCR:
      scrapeInterval: 30s
    resources: {}
  upgradeStrategy: automatic
---
apiVersion: opentelemetry.io/v1beta1
kind: OpenTelemetryCollector
metadata:
  labels:
    app.kubernetes.io/component: otel-collector
    app.kubernetes.io/instance: otel-collector
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: otel-collector
    app.kubernetes.io/part-of: observability
    app.kubernetes.io/version: 0.115.0
    helm.sh/chart: otel-collector-0.1.0
  name: otel-collector
  namespace: observability-hub
spec:
  config:
    exporters:
      debug:
        verbosity: basic
      otlphttp/dev:
        auth:
          authenticator: bearertokenauth
        endpoint: https://tempo-tempostack-gateway.observability-hub.svc.cluster.local:8080/api/traces/v1/dev
        headers:
          X-Scope-OrgID: dev
        tls:
          ca_file: /var/run/secrets/kubernetes.io/serviceaccount/service-ca.crt
          insecure: false
    extensions:
      bearertokenauth:
        filename: /var/run/secrets/kubernetes.io/serviceaccount/token
    processors:
      batch:
        send_batch_size: 100
        timeout: 1s
      memory_limiter:
        check_interval: 5s
        limit_percentage: 95
        spike_limit_percentage: 25
    receivers:
      otlp:
        protocols:
          grpc:
            endpoint: 0.0.0.0:4317
          http:
            endpoint: 0.0.0.0:4318
      prometheus:
        config:
          scrape_configs:
          - job_name: llama3-2-3b
            scrape_interval: 15s
            static_configs:
            - targets:
              - llama3-2-3b-predictor.llama-serve.svc.cluster.local:8080
    service:
      extensions:
      - bearertokenauth
      pipelines:
        metrics:
          exporters:
          - debug
          processors:
          - batch
          - memory_limiter
          receivers:
          - otlp
          - prometheus
        traces:
          exporters:
          - debug
          - otlphttp/dev
          processors:
          - batch
          - memory_limiter
          receivers:
          - otlp
      telemetry:
        metrics:
          address: 0.0.0.0:8888
  ingress:
    route:
      termination: passthrough
    type: route
  ipFamilyPolicy: SingleStack
  managementState: managed
  mode: deployment
  observability:
    metrics:
      enableMetrics: true
  replicas: 1
  serviceAccount: otel-collector
  upgradeStrategy: automatic
---
apiVersion: opentelemetry.io/v1beta1
kind: OpenTelemetryCollector
metadata:
  labels:
    app.kubernetes.io/component: otel-sidecar
    app.kubernetes.io/instance: otel-collector
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: vllm-otelsidecar
    app.kubernetes.io/part-of: observability
    app.kubernetes.io/version: 0.115.0
    helm.sh/chart: otel-collector-0.1.0
  name: vllm-otelsidecar
  namespace: observability-hub
spec:
  config:
    exporters:
      debug: {}
      otlphttp:
        endpoint: http://otel-collector-collector.observability-hub.svc.cluster.local:4318
        tls:
          insecure: true
    processors: {}
    receivers:
      otlp:
        protocols:
          grpc: {}
          http: {}
      prometheus:
        config:
          scrape_configs:
          - job_name: vllm-sidecar
            scrape_interval: 15s
            static_configs:
            - targets:
              - localhost:8000
    service:
      pipelines:
        metrics:
          exporters:
          - debug
          - otlphttp
          receivers:
          - prometheus
          - otlp
        traces:
          exporters:
          - debug
          - otlphttp
          receivers:
          - otlp
      telemetry:
        metrics:
          address: 0.0.0.0:8888
  daemonSetUpdateStrategy: {}
  deploymentUpdateStrategy: {}
  ingress:
    route: {}
  ipFamilyPolicy: SingleStack
  managementState: managed
  mode: sidecar
  observability:
    metrics: {}
  podDnsConfig: {}
  replicas: 1
  targetAllocator:
    allocationStrategy: consistent-hashing
    filterStrategy: relabel-config
    observability:
      metrics: {}
    prometheusCR:
      scrapeInterval: 30s
    resources: {}
  upgradeStrategy: automatic
---
# =============================================================================
# ROUTES AND NETWORKING
# External access routes
# =============================================================================
apiVersion: route.openshift.io/v1
kind: Route
metadata:
  labels:
    app.kubernetes.io/instance: grafana
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: grafana
    app.kubernetes.io/version: latest
    helm.sh/chart: grafana-0.1.0
  name: grafana-route
  namespace: observability-hub
spec:
  port:
    targetPort: grafana
  tls:
    termination: edge
  to:
    kind: Service
    name: grafana-service
    weight: 100
  wildcardPolicy: None
---
# =============================================================================
# TEMPO STACK
# Distributed tracing backend
# =============================================================================
apiVersion: tempo.grafana.com/v1alpha1
kind: TempoStack
metadata:
  labels:
    app.kubernetes.io/component: tempo
    app.kubernetes.io/instance: tempo
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: tempo-stack
    app.kubernetes.io/part-of: observability
    app.kubernetes.io/version: latest
    helm.sh/chart: tempo-stack-1.0.0
  name: tempostack
  namespace: observability-hub
spec:
  resources:
    total:
      limits:
        cpu: 5000m
        memory: 10Gi
  storage:
    secret:
      name: minio-tempo
      type: s3
  storageSize: 15Gi
  template:
    gateway:
      enabled: true
    queryFrontend:
      jaegerQuery:
        enabled: false
  tenants:
    authentication:
    - tenantId: 1610b0c3-c509-4592-a256-a1871353dbfa
      tenantName: dev
    mode: openshift
